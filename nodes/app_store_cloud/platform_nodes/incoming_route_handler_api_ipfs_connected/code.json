{
  "type": "code:0.0.1:local:32498h32f2",
  "name": "code",
  "data": {
    "key": "8a1aec75-e403-4e69-84ad-da2fa3652758",
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      let StellarSdk = universe.require('stellar-sdk');\n      let crypto = universe.require('crypto');\n      \n      console.log('--incoming_route_handler: is IPFS connected? --');\n      \n      // INPUT: expressObj\n      \n      let page = {\n        type: 'ipfs_connected_result:Qmlf3232f',\n        data: null // boolean\n      };\n      \n      let headers = INPUT.data.req.headers;\n      let body = INPUT.data.req.body;\n      // let query = INPUT.data.req.query;\n\n      let ipfsConnectedResult = await universe.loadAndRunCapability('IPFS',{},{\n        type: 'standard_capability_action:0.0.1:local:298j291bs',\n        data: {\n          action: 'isConnected',\n          options: {}\n        }\n      });\n      \n      page.data = ipfsConnectedResult.data;\n      \n      await universe.httpResponse('send', page);\n      \n      return resolve(true);\n        \n        \n    }catch(err){\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  }
}