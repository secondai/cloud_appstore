{
  "type": "code:0.0.1:local:32498h32f2",
  "name": "code",
  "data": {
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      // Updates the local \"identity_attributes_builder\" for an external identity \n      // - or whoever I'm acting as \n      \n      let requestCache = await universe.getRequestCache({});\n      \n      // Get external_identity (auth'd user) \n      let AuthIdentityNode = requestCache.keyvalue.IdentityNode; \n      if(requestCache.keyvalue.ActAsExternalIdentityNode){\n        // Find external_identity_node for this Second \n        // - \"acting as\" \n        AuthIdentityNode = requestCache.keyvalue.ActAsExternalIdentityNode;\n        // - TODO: what about passing in tokens? \n      }\n      \n      if(!AuthIdentityNode || AuthIdentityNode.type.indexOf('external_identity:') !== 0){\n        console.error('Missing AuthIdentityNode');\n        return resolve({\n          error: true,\n          message: 'Missing AuthIdentityNode, expecting from identify_via_token'\n        });\n      }\n      \n      console.log('INPUT:', INPUT);\n      \n      // see if exists already, update or create \n      if(INPUT.type != 'identity_attributes_builder:Qmdsflj2301113'){\n        return resolve({\n          type: 'error:Qmdfsds',\n          data: {\n            error: true,\n            message: 'invalid INPUT.type'\n          }\n        });\n      }\n      \n      // should already exist locally (created in createLocal) \n      let builderNode = AuthIdentityNode.nodes.find(n=>{\n        return n.type == 'identity_attributes_builder:Qmdsflj2301113';\n      });\n      if(!builderNode){\n        // create new\n        console.log('Missing local identity_attributes_builder for', AuthIdentityNode.data.identity);\n        \n        let newNode = {\n          nodeId: AuthIdentityNode._id,\n          type: INPUT.type,\n          data: INPUT.data\n        }\n        \n        let savedNode = await universe.newNode(newNode);\n        \n      } else {\n        // update \n        console.log('Found existing local identity_attributes_builder for', AuthIdentityNode.data.identity);\n        // previousBuilderNode.data = builderNode.data;\n        // let updatedPreviousBuilderNode = await universe.updateNode(previousBuilderNode);\n        // console.log('updatedPreviousBuilderNode'); \n        \n        builderNode.data = INPUT.data;\n        \n        let updatedNode = await universe.updateNode(builderNode);\n        \n      }\n      \n      console.log('Completed saving/updating identity_attributes_builder');\n      \n      return resolve({\n        type: 'boolean:Qm...',\n        data: true\n      });\n      \n      // manage_syndication_identity_attributes_builder:Qmddsfj238900\n        \n        \n    }catch(err){\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()",
    "key": "7090f3d5-3b0b-4c8f-9e44-c01ebf7da87f"
  }
}