{
  "type": "code:0.0.1:local:32498h32f2",
  "name": "code",
  "data": {
    "key": "269e93ea-02b6-4182-98a2-c1bb066c7ac1",
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      universe.globalCache.SearchFilters = {};\n      \n      // INPUT = generic options node \n      console.log('CLEAR_SEARCH_FILTER');\n      let continueAction = await universe.loadAndRunCapability('Auth',{},{\n        type: 'standard_capability_action:0.0.1:local:298j291bs',\n        data: {\n          action: 'actionPermissions',\n          options: {\n            groups: {\n              admin: true\n            }\n          }\n        }\n      });\n      if(!continueAction.data){\n        // not allowed to continue \n        console.error('Failed Auth (disallowed)');\n        return resolve({\n          type: 'failed_auth:...',\n          data: {\n            error: true\n          }\n        })\n      }\n      \n      return resolve({\n        type: 'boolean:Qmdskfj20fi',\n        data: true\n      });\n        \n        \n    }catch(err){\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  }
}