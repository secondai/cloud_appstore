{
  "type": "code:0.0.1:local:32498h32f2",
  "name": "code",
  "data": {
    "key": "8a1aec75-e403-4e69-84ad-da2fa3652758",
    "code": "(()=>{\n  return new Promise(async (resolve, reject)=>{\n    try {\n      \n      console.log('--incoming_route_handler: Upload some data for a route (does NOT modify path, just handles IPFS-part)--');\n      \n      // INPUT: expressObj\n      \n      \n      // TODO: verify the person uploading \n      // - get the account_invite for the username, check signature \n      // return false;\n      \n      \n      let page = {\n        type: 'ipfs_result:Qmlf3232f',\n        data: {}\n      };\n      \n      let headers = INPUT.data.req.headers;\n      let body = INPUT.data.req.body;\n      // let query = INPUT.data.req.query;\n\n      console.log('BODY fileAsString:', body);\n\n      let ipfsFileAddResult = await universe.loadAndRunCapability('IPFS',{},{\n        type: 'standard_capability_action:0.0.1:local:298j291bs',\n        data: {\n          action: 'file.add',\n          options: {\n            type: 'file_as_string_with_options:Qmfl2kjf23slfj',\n            data: {\n              options: {pin: true}, // INPUT.data.data.options,\n              fileValue: body.fileAsString // INPUT.data.data.fileValue\n            }\n          }\n        }\n      });\n      \n      \n      console.log('ipfsFileAddResult:', ipfsFileAddResult);\n      // await universe.updateNode(accountInviteNode);\n      \n      page.data.success = true;\n      page.data.hash = ipfsFileAddResult.data.hash;\n      \n      console.log('returning page');\n      await universe.httpResponse('send', page);\n      \n      return resolve(true);\n        \n        \n    }catch(err){\n      resolve({ERROR: true, err: err.toString()});\n    }\n    \n    \n  })\n})()"
  }
}